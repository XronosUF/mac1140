## -*- encoding: utf-8 -*-

# This file was *autogenerated* from the file propertiesOfLogs-Practice1.sagetex.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7); _sage_const_6 = Integer(6); _sage_const_5 = Integer(5); _sage_const_4 = Integer(4); _sage_const_9 = Integer(9); _sage_const_8 = Integer(8); _sage_const_28 = Integer(28); _sage_const_29 = Integer(29); _sage_const_22 = Integer(22); _sage_const_23 = Integer(23); _sage_const_20 = Integer(20); _sage_const_21 = Integer(21); _sage_const_26 = Integer(26); _sage_const_27 = Integer(27); _sage_const_24 = Integer(24); _sage_const_25 = Integer(25); _sage_const_32 = Integer(32); _sage_const_33 = Integer(33); _sage_const_174 = Integer(174); _sage_const_158 = Integer(158); _sage_const_13 = Integer(13); _sage_const_12 = Integer(12); _sage_const_11 = Integer(11); _sage_const_10 = Integer(10); _sage_const_17 = Integer(17); _sage_const_16 = Integer(16); _sage_const_15 = Integer(15); _sage_const_14 = Integer(14); _sage_const_31 = Integer(31); _sage_const_30 = Integer(30); _sage_const_19 = Integer(19); _sage_const_18 = Integer(18); _sage_const_35 = Integer(35); _sage_const_34 = Integer(34); _sage_const_37 = Integer(37); _sage_const_36 = Integer(36); _sage_const_39 = Integer(39); _sage_const_38 = Integer(38); _sage_const_166 = Integer(166); _sage_const_95 = Integer(95); _sage_const_144 = Integer(144); _sage_const_149 = Integer(149)## This file (propertiesOfLogs-Practice1.sagetex.sage) was *autogenerated* from propertiesOfLogs-Practice1.tex with sagetex.sty version 2015/08/26 v3.0-92d9f7a.
import sagetex
_st_ = sagetex.SageTeXProcessor('propertiesOfLogs-Practice1', version='2015/08/26 v3.0-92d9f7a', version_check=True)
_st_.current_tex_line = _sage_const_1 
_st_.blockbegin()
try:
 
 ######  Define a function to convert a sage number into a saved counter number.
 
 #####Define default Sage variables.
 #Default function variables
 var('x,y,z,X,Y,Z')
 #Default function names
 var('f,g,h,dx,dy,dz,dh,df')
 #Default Wild cards
 w0 = SR.wild(_sage_const_0 )
 
 def DispSign(b):
     """ Returns the string of the 'signed' version of `b`, e.g. 3 -> "+3", -3 -> "-3", 0 -> "".
     """
     if b == _sage_const_0 :
         return ""
     elif b > _sage_const_0 :
         return "+" + str(b)
     elif b < _sage_const_0 :
         return str(b)
     else:
         # If we're here, then something has gone wrong.
         raise ValueError
 
 def ISP(b):
     return DispSign(b)
 
 def NoEval(f, c):
     # TODO
     """ Returns a non-evaluted version of the result f(c).
     """
     cStr = str(c)
     # fLatex = latex(f)
     fString = latex(f)
     fStrList = list(fString)
     length = len(fStrList)
     fStrList2 = range(length)
     for i in range(_sage_const_0 , length):
         if fStrList[i] == "x":
             fStrList2[i] = "("+cstr+")"
         else:
             fStrList2[i] = fStrList[i]
     f2 = join(fStrList2,"")
     return LatexExpr(f2)
 
 def HyperSimp(f):
     """ Returns the expression `f` without hyperbolic expressions.
     """
     subsDict = {
         sinh(w0) : (exp(w0) - exp(-w0))/_sage_const_2 ,
         cosh(w0) : (exp(w0) + exp(-w0))/_sage_const_2 ,
         tanh(w0) : (exp(w0) - exp(-w0))/(exp(w0) + exp(-w0)),
         sech(w0) : _sage_const_2 /(exp(w0) + exp(-w0)),                      # This seems to work, but Nowell said it didn't at one point.
         csch(w0) : _sage_const_2 /(exp(w0) - exp(-w0)),                      # This seems to work, but Nowell said it didn't at one point.
         coth(w0) : (exp(w0) + exp(-w0))/(exp(w0) - exp(-w0)),   # This seems to work, but Nowell said it didn't at one point.
         arcsinh(w0) :       ln( w0 + sqrt((w0)**_sage_const_2  + _sage_const_1 ) ),
         arccosh(w0) :       ln( w0 + sqrt((w0)**_sage_const_2  - _sage_const_1 ) ),
         arctanh(w0) : _sage_const_1 /_sage_const_2  * ln( (_sage_const_1  + w0) / (_sage_const_1  - w0) ),
         arccsch(w0) :       ln( (_sage_const_1  + sqrt((w0)**_sage_const_2  + _sage_const_1 ))/w0 ),
         arcsech(w0) :       ln( (_sage_const_1  + sqrt(_sage_const_1  - (w0)**_sage_const_2 ))/w0 ),
         arccoth(w0) : _sage_const_1 /_sage_const_2  * ln( (_sage_const_1  + w0) / (w0 - _sage_const_1 ) )
     }
     g = f.substitute(subsDict)
     return simplify(g)
 
 def RandInt(a,b):
     """ Returns a random integer in [`a`,`b`]. Note that `a` and `b` should be integers themselves to avoid unexpected behavior.
     """
     return QQ(randint(int(a),int(b)))
     # return choice(range(a,b+1))
 
 def NonZeroInt(b,c, avoid = [_sage_const_0 ]):
     """ Returns a random integer in [`b`,`c`] which is not in `av`.
         If `av` is not specified, defaults to a non-zero integer.
     """
     while True:
         a = RandInt(b,c)
         if a not in avoid:
             return a
 
 def RandVector(b, c, avoid=[], rep=_sage_const_1 ):
     """ Returns essentially a multiset permutation of ([b,c]-av) * rep.
         That is, a vector which contains each integer in [`b`,`c`] which is not in `av` a total of `rep` number of times.
         Example:
         sage: RandVector(1,3, [2], 2)
         [3, 1, 1, 3]
     """
     oneVec = [val for val in range(b,c+_sage_const_1 ) if val not in avoid]
     vec = oneVec * rep
     shuffle(vec)
     return vec
 
 
except:
 _st_.goboom(_sage_const_95 )
_st_.blockend()
_st_.current_tex_line = _sage_const_9 
_st_.blockbegin()
try:
 var('x','y','z','r')
 ###### Problem p1
 
 p1c1 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1c2 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1c3 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1c4 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1c5 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1c6 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1c7 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1c8 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1c9 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1c10 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1c11 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1c12 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1c13 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1c14 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1c15 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1c16 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1pwr1 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p1pwr2 = RandInt(-_sage_const_6 ,_sage_const_6 )
 
 p1f1 = x**p1c1*y**p1c2*z**p1c3*r**p1c4
 p1f2 = x**p1c5*y**p1c6*z**p1c7*r**p1c8
 
 p1f3 = x**p1c9*y**p1c10*z**p1c11*r**p1c12
 p1f4 = x**p1c13*y**p1c14*z**p1c15*r**p1c16
 
 p1ans1 = (p1c1-p1c5)*p1pwr1 + (p1c9-p1c13)*p1pwr2
 p1ans2 = (p1c2-p1c6)*p1pwr1 + (p1c10-p1c14)*p1pwr2
 p1ans3 = (p1c3-p1c7)*p1pwr1 + (p1c11-p1c15)*p1pwr2
 p1ans4 = (p1c4-p1c8)*p1pwr1 + (p1c12-p1c16)*p1pwr2
 
 
 ###### Problem p2
 
 p2c1 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2c2 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2c3 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2c4 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2c5 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2c6 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2c7 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2c8 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2c9 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2c10 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2c11 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2c12 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2c13 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2c14 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2c15 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2c16 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2pwr1 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p2pwr2 = RandInt(-_sage_const_6 ,_sage_const_6 )
 
 p2f1 = x**p2c1*y**p2c2*z**p2c3*r**p2c4
 p2f2 = x**p2c5*y**p2c6*z**p2c7*r**p2c8
 
 p2f3 = x**p2c9*y**p2c10*z**p2c11*r**p2c12
 p2f4 = x**p2c13*y**p2c14*z**p2c15*r**p2c16
 
 p2ans1 = (p2c1-p2c5)*p2pwr1 + (p2c9-p2c13)*p2pwr2
 p2ans2 = (p2c2-p2c6)*p2pwr1 + (p2c10-p2c14)*p2pwr2
 p2ans3 = (p2c3-p2c7)*p2pwr1 + (p2c11-p2c15)*p2pwr2
 p2ans4 = (p2c4-p2c8)*p2pwr1 + (p2c12-p2c16)*p2pwr2
 
 
 ###### Problem p3
 
 p3c1 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3c2 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3c3 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3c4 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3c5 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3c6 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3c7 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3c8 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3c9 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3c10 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3c11 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3c12 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3c13 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3c14 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3c15 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3c16 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3pwr1 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p3pwr2 = RandInt(-_sage_const_6 ,_sage_const_6 )
 
 p3f1 = x**p3c1*y**p3c2*z**p3c3*r**p3c4
 p3f2 = x**p3c5*y**p3c6*z**p3c7*r**p3c8
 
 p3f3 = x**p3c9*y**p3c10*z**p3c11*r**p3c12
 p3f4 = x**p3c13*y**p3c14*z**p3c15*r**p3c16
 
 p3ans1 = (p3c1-p3c5)*p3pwr1 + (p3c9-p3c13)*p3pwr2
 p3ans2 = (p3c2-p3c6)*p3pwr1 + (p3c10-p3c14)*p3pwr2
 p3ans3 = (p3c3-p3c7)*p3pwr1 + (p3c11-p3c15)*p3pwr2
 p3ans4 = (p3c4-p3c8)*p3pwr1 + (p3c12-p3c16)*p3pwr2
 
 
 ###### Problem p4
 
 p4c1 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4c2 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4c3 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4c4 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4c5 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4c6 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4c7 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4c8 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4c9 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4c10 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4c11 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4c12 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4c13 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4c14 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4c15 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4c16 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4pwr1 = RandInt(-_sage_const_6 ,_sage_const_6 )
 p4pwr2 = RandInt(-_sage_const_6 ,_sage_const_6 )
 
 p4f1 = x**p4c1*y**p4c2*z**p4c3*r**p4c4
 p4f2 = x**p4c5*y**p4c6*z**p4c7*r**p4c8
 
 p4f3 = x**p4c9*y**p4c10*z**p4c11*r**p4c12
 p4f4 = x**p4c13*y**p4c14*z**p4c15*r**p4c16
 
 p4ans1 = (p4c1-p4c5)*p4pwr1 + (p4c9-p4c13)*p4pwr2
 p4ans2 = (p4c2-p4c6)*p4pwr1 + (p4c10-p4c14)*p4pwr2
 p4ans3 = (p4c3-p4c7)*p4pwr1 + (p4c11-p4c15)*p4pwr2
 p4ans4 = (p4c4-p4c8)*p4pwr1 + (p4c12-p4c16)*p4pwr2
 
 
 
except:
 _st_.goboom(_sage_const_144 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_149 
 _st_.inline(_sage_const_0 , latex(p1f1))
except:
 _st_.goboom(_sage_const_149 )
try:
 _st_.current_tex_line = _sage_const_149 
 _st_.inline(_sage_const_1 , latex(p1f2))
except:
 _st_.goboom(_sage_const_149 )
try:
 _st_.current_tex_line = _sage_const_149 
 _st_.inline(_sage_const_2 , latex(p1pwr1))
except:
 _st_.goboom(_sage_const_149 )
try:
 _st_.current_tex_line = _sage_const_149 
 _st_.inline(_sage_const_3 , latex(p1f3))
except:
 _st_.goboom(_sage_const_149 )
try:
 _st_.current_tex_line = _sage_const_149 
 _st_.inline(_sage_const_4 , latex(p1f4))
except:
 _st_.goboom(_sage_const_149 )
try:
 _st_.current_tex_line = _sage_const_149 
 _st_.inline(_sage_const_5 , latex(p1pwr2))
except:
 _st_.goboom(_sage_const_149 )
try:
 _st_.current_tex_line = _sage_const_149 
 _st_.inline(_sage_const_6 , latex(p1ans1))
except:
 _st_.goboom(_sage_const_149 )
try:
 _st_.current_tex_line = _sage_const_149 
 _st_.inline(_sage_const_7 , latex(p1ans2))
except:
 _st_.goboom(_sage_const_149 )
try:
 _st_.current_tex_line = _sage_const_149 
 _st_.inline(_sage_const_8 , latex(p1ans3))
except:
 _st_.goboom(_sage_const_149 )
try:
 _st_.current_tex_line = _sage_const_149 
 _st_.inline(_sage_const_9 , latex(p1ans4))
except:
 _st_.goboom(_sage_const_149 )
try:
 _st_.current_tex_line = _sage_const_158 
 _st_.inline(_sage_const_10 , latex(p2f1))
except:
 _st_.goboom(_sage_const_158 )
try:
 _st_.current_tex_line = _sage_const_158 
 _st_.inline(_sage_const_11 , latex(p2f2))
except:
 _st_.goboom(_sage_const_158 )
try:
 _st_.current_tex_line = _sage_const_158 
 _st_.inline(_sage_const_12 , latex(p2pwr1))
except:
 _st_.goboom(_sage_const_158 )
try:
 _st_.current_tex_line = _sage_const_158 
 _st_.inline(_sage_const_13 , latex(p2f3))
except:
 _st_.goboom(_sage_const_158 )
try:
 _st_.current_tex_line = _sage_const_158 
 _st_.inline(_sage_const_14 , latex(p2f4))
except:
 _st_.goboom(_sage_const_158 )
try:
 _st_.current_tex_line = _sage_const_158 
 _st_.inline(_sage_const_15 , latex(p2pwr2))
except:
 _st_.goboom(_sage_const_158 )
try:
 _st_.current_tex_line = _sage_const_158 
 _st_.inline(_sage_const_16 , latex(p2ans1))
except:
 _st_.goboom(_sage_const_158 )
try:
 _st_.current_tex_line = _sage_const_158 
 _st_.inline(_sage_const_17 , latex(p2ans2))
except:
 _st_.goboom(_sage_const_158 )
try:
 _st_.current_tex_line = _sage_const_158 
 _st_.inline(_sage_const_18 , latex(p2ans3))
except:
 _st_.goboom(_sage_const_158 )
try:
 _st_.current_tex_line = _sage_const_158 
 _st_.inline(_sage_const_19 , latex(p2ans4))
except:
 _st_.goboom(_sage_const_158 )
try:
 _st_.current_tex_line = _sage_const_166 
 _st_.inline(_sage_const_20 , latex(p3f1))
except:
 _st_.goboom(_sage_const_166 )
try:
 _st_.current_tex_line = _sage_const_166 
 _st_.inline(_sage_const_21 , latex(p3f2))
except:
 _st_.goboom(_sage_const_166 )
try:
 _st_.current_tex_line = _sage_const_166 
 _st_.inline(_sage_const_22 , latex(p3pwr1))
except:
 _st_.goboom(_sage_const_166 )
try:
 _st_.current_tex_line = _sage_const_166 
 _st_.inline(_sage_const_23 , latex(p3f3))
except:
 _st_.goboom(_sage_const_166 )
try:
 _st_.current_tex_line = _sage_const_166 
 _st_.inline(_sage_const_24 , latex(p3f4))
except:
 _st_.goboom(_sage_const_166 )
try:
 _st_.current_tex_line = _sage_const_166 
 _st_.inline(_sage_const_25 , latex(p3pwr2))
except:
 _st_.goboom(_sage_const_166 )
try:
 _st_.current_tex_line = _sage_const_166 
 _st_.inline(_sage_const_26 , latex(p3ans1))
except:
 _st_.goboom(_sage_const_166 )
try:
 _st_.current_tex_line = _sage_const_166 
 _st_.inline(_sage_const_27 , latex(p3ans2))
except:
 _st_.goboom(_sage_const_166 )
try:
 _st_.current_tex_line = _sage_const_166 
 _st_.inline(_sage_const_28 , latex(p3ans3))
except:
 _st_.goboom(_sage_const_166 )
try:
 _st_.current_tex_line = _sage_const_166 
 _st_.inline(_sage_const_29 , latex(p3ans4))
except:
 _st_.goboom(_sage_const_166 )
try:
 _st_.current_tex_line = _sage_const_174 
 _st_.inline(_sage_const_30 , latex(p4f1))
except:
 _st_.goboom(_sage_const_174 )
try:
 _st_.current_tex_line = _sage_const_174 
 _st_.inline(_sage_const_31 , latex(p4f2))
except:
 _st_.goboom(_sage_const_174 )
try:
 _st_.current_tex_line = _sage_const_174 
 _st_.inline(_sage_const_32 , latex(p4pwr1))
except:
 _st_.goboom(_sage_const_174 )
try:
 _st_.current_tex_line = _sage_const_174 
 _st_.inline(_sage_const_33 , latex(p4f3))
except:
 _st_.goboom(_sage_const_174 )
try:
 _st_.current_tex_line = _sage_const_174 
 _st_.inline(_sage_const_34 , latex(p4f4))
except:
 _st_.goboom(_sage_const_174 )
try:
 _st_.current_tex_line = _sage_const_174 
 _st_.inline(_sage_const_35 , latex(p4pwr2))
except:
 _st_.goboom(_sage_const_174 )
try:
 _st_.current_tex_line = _sage_const_174 
 _st_.inline(_sage_const_36 , latex(p4ans1))
except:
 _st_.goboom(_sage_const_174 )
try:
 _st_.current_tex_line = _sage_const_174 
 _st_.inline(_sage_const_37 , latex(p4ans2))
except:
 _st_.goboom(_sage_const_174 )
try:
 _st_.current_tex_line = _sage_const_174 
 _st_.inline(_sage_const_38 , latex(p4ans3))
except:
 _st_.goboom(_sage_const_174 )
try:
 _st_.current_tex_line = _sage_const_174 
 _st_.inline(_sage_const_39 , latex(p4ans4))
except:
 _st_.goboom(_sage_const_174 )
_st_.endofdoc()

